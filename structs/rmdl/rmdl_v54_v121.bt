//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: rmdl, rrig
//   Authors: Rika
//   Version: 54
// Increment: 12.1
//   Purpose: Respawn MDL Files
//  Category: Model
// File Mask: *.rmdl, *.rrig
//  ID Bytes: 
//   History: 
//------------------------------------------------


#include "../source_math.bt"
#include "../mdl/mdl_structs.bt"
#include "../rmdl/rmdl_structs.bt"

local int i = 0;
local int j = 0;
local int k = 1;
local int x = 0;


// header
studiohdr_t_v54_v121 hdr <bgcolor=cLtBlue, read=ReadString(startof(this) + this.sznameindex)>;


// funny strings that work the same always
#include "../mdl/mdl_v52_module_mayastrings.bt"


// global section here because it's unchanged from v8-v12, but required for two templates
#include "../rmdl/rmdl_v54_v121_module_bonejiggleattach.bt"


// global hitbox for v54 since it doesn't change
#include "../rmdl/rmdl_v54_module_hitbox.bt"


FSeek(hdr.bonetablebynameindex);
ubyte bonebyname[hdr.numbones] <read=ReadString(startof(bones[this]) + bones[this].sznameindex), bgcolor=cDkGreen>;


// seqs change for v12.1, or aseq v7.1.
#include "../rmdl/rmdl_v54_v121_module_sequences.bt"


// models
// these change between v12.1/v13/v14 because Respawn.
FSeek(hdr.bodypartindex);
if(hdr.numbodyparts)
{
    struct {
    
        for(i = 0; i < hdr.numbodyparts; i++)
        {
            FSeek(hdr.bodypartindex + (sizeof(mstudiobodyparts_t) * i));
            struct {
                mstudiobodyparts_t bodypart <bgcolor=cGray, read=ReadString(startof(this) + this.sznameindex)>;
        
                FSeek(startof(bodypart) + bodypart.modelindex);
                for(j = 0; j < bodypart.nummodels; j++)
                {
                    FSeek(startof(bodypart) + bodypart.modelindex + (sizeof(mstudiomodel_t_v54_v121) * j));
                    struct {
                        mstudiomodel_t_v54_v121 model <read=this.name>;
    
                        FSeek(startof(model) + model.meshindex);
                        mstudiomesh_t_v54_v121 meshes[model.nummeshes] <read=ReadString(startof(textures[this.material]) + textures[this.material].sznameindex), bgcolor=cLtGray>;
                    } model <read=this.model.name, bgcolor=cDkGray>;
                }
            } bodypart <read=ReadString(startof(this.bodypart) + this.bodypart.sznameindex)>;
        }
    
    } bodyparts <read=Str("%i bodyparts", hdr.numbodyparts)>;
}


// v54 node
#include "../rmdl/rmdl_v54_module_nodes.bt"


FSeek(hdr.localposeparamindex);
mstudioposeparamdesc_t poseparm[hdr.numlocalposeparameters] <bgcolor=cYellow, read=ReadString(startof(this) + this.sznameindex)>;


// unchanged between subversions
#include "../rmdl/rmdl_v54_module_ikchain.bt"


// unchanged between subversions
#include "../mdl/mdl_v53_module_rui.bt"


// various includes, materials, and groups

// we no longer do include model because that's handled in the rpak header.

// I do an include file because these are the same across all v54 (for now),
// and I really don't wanna have to update every template every time I change something.
#include "../rmdl/rmdl_v54_module_textures.bt"


// do keyvalues, this remains unchanged in all models since it's just char data.
FSeek(hdr.keyvalueindex);
char keyvalues_char[hdr.keyvaluesize] <fgcolor=cLtBlue>;


FSeek(hdr.srcbonetransformindex);
mstudiosrcbonetransform_t srcbonetransform[hdr.numsrcbonetransform] <bgcolor=cDkGreen, read=ReadString(startof(this) + this.sznameindex)>;


// unchanged between subversions
#include "../rmdl/rmdl_v54_module_linearbone.bt"


// global string table setup, only changes for v14
#include "../rmdl/rmdl_v54_module_stringtable.bt"


// unkdata headers changed in v12
#include "../rmdl/rmdl_v54_v12_module_bvh4.bt"


// unsure what this is for, same as v53
#include "../mdl/mdl_module_bone_followers.bt"

// third set of core parts, done like this for spacing.
#include "../rmdl/rmdl_v54_v121_vg.bt"