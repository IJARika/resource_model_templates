//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: rmdl
//   Authors: Rika
//   Version: 54
// Increment: 14/15
//   Purpose: Respawn MDL Files
//  Category: Model
// File Mask: *.rmdl
//  ID Bytes: 
//   History: 
//------------------------------------------------


/*V54 V14+ STRING TABLE MODULE*/


local int64 stringtable_size; // size for string table

if(mdlHeader.sznameindex > 16)
{
    // seek to string table (this is the best way to do it)
    FSeek(mdlHeader.sznameindex);
    
    // check if either of these is null
    if(mdlHeader.unkindex3 > 0 || mdlHeader.bvh4index > 0)
    {
        // unkindex4 is sometimes nulled, check if it is
        if(mdlHeader.bvh4index > 0)
            stringtable_size = mdlHeader.bvh4index - (mdlHeader.sznameindex);
        else
            stringtable_size = mdlHeader.unkindex3 - (mdlHeader.sznameindex);
    }
    // if null use length, this normally only gets used in rrigs and potentially viewmodels
    else
       stringtable_size = mdlHeader.length - (mdlHeader.sznameindex);
}

else
{
    // seek to string table (this is the best way to do it)
    FSeek(mdlHeader.surfacepropindex);
    
    // check if either of these is null
    if(mdlHeader.unkindex3 > 0 || mdlHeader.bvh4index > 0)
    {
        // unkindex4 is sometimes nulled, check if it is
        if(mdlHeader.bvh4index > 0)
            stringtable_size = mdlHeader.bvh4index - mdlHeader.surfacepropindex;
        else
            stringtable_size = mdlHeader.unkindex3 - mdlHeader.surfacepropindex;
    }
    // if null use length, this normally only gets used in rrigs and potentially viewmodels
    else
        stringtable_size = mdlHeader.length - mdlHeader.surfacepropindex;
}

char stringtable[stringtable_size] <fgcolor=cLtRed>;