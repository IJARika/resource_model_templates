#include "../source_math.bt"
#include "../mdl/mdl_structs.bt"
#include "../rmdl/rmdl_structs.bt"

local int g = 0;
local int i = 0;
local int j = 0;
local int k = 1;
local int l = 0;
local int si = 0;

//local int numanims = seqdesc.groupsize[0] * seqdesc.groupsize[1];
local int numbones = 73;
local int numsections = 8;

local int valueOffset = 0;

FSeek(0);
boneflagarray_t_loose flagarray;
                        
for(j = 0; j < numbones; j++)
{
    if(flagarray.boneflag[j].STUDIO_ANIM_POS_54 || flagarray.boneflag[j].STUDIO_ANIM_ROT_54 || flagarray.boneflag[j].STUDIO_ANIM_SCALE_54)
    {
        mstudio_rle_anim_t_v54 sectionanimheader <bgcolor=0x771122>;

        if(sectionanimheader.flags & STUDIO_ANIM_ANIMPOS_54)
        {
            valueOffset = startof(sectionanimheader.animpos) + (sectionanimheader.animpos.offset);
            FSeek(valueOffset);

            struct {
                if(sectionanimheader.animpos.flags & STUDIO_ANIMPTR_X)
                    mstudioanimvalue_t x <fgcolor=cLtGreen>;

                FSeek(valueOffset + (sectionanimheader.animpos.axisIdx1 * sizeof(mstudioanimvalue_t)));

                if(sectionanimheader.animpos.flags & STUDIO_ANIMPTR_Y)
                    mstudioanimvalue_t y <fgcolor=cLtGreen>;

                FSeek(valueOffset + (sectionanimheader.animpos.axisIdx2 * sizeof(mstudioanimvalue_t)));

                if(sectionanimheader.animpos.flags & STUDIO_ANIMPTR_Z)
                    mstudioanimvalue_t z <fgcolor=cLtGreen>;

            } posvalues;
            
        }

        if(sectionanimheader.flags & STUDIO_ANIM_ANIMROT_54)
        {
            valueOffset = startof(sectionanimheader.animrot) + (sectionanimheader.animrot.offset);
            FSeek(valueOffset);

            struct {
                if(sectionanimheader.animrot.flags & STUDIO_ANIMPTR_X)
                    mstudioanimvalue_t x <fgcolor=cLtRed>;

                FSeek(valueOffset + (sectionanimheader.animrot.axisIdx1 * sizeof(mstudioanimvalue_t)));

                if(sectionanimheader.animrot.flags & STUDIO_ANIMPTR_Y)
                    mstudioanimvalue_t y <fgcolor=cLtRed>;

                FSeek(valueOffset + (sectionanimheader.animrot.axisIdx2 * sizeof(mstudioanimvalue_t)));

                if(sectionanimheader.animrot.flags & STUDIO_ANIMPTR_Z)
                    mstudioanimvalue_t z <fgcolor=cLtRed>;

            } rotvalues;
        }

        if(sectionanimheader.flags & STUDIO_ANIM_ANIMSCALE_54)
        {
            valueOffset = startof(sectionanimheader.animscale) + (sectionanimheader.animscale.offset);
            FSeek(valueOffset);

            struct {
                if(sectionanimheader.animscale.flags & STUDIO_ANIMPTR_X)
                    mstudioanimvalue_t x <fgcolor=cLtYellow>;

                FSeek(valueOffset + (sectionanimheader.animscale.axisIdx1 * sizeof(mstudioanimvalue_t)));

                if(sectionanimheader.animscale.flags & STUDIO_ANIMPTR_Y)
                    mstudioanimvalue_t y <fgcolor=cLtYellow>;

                FSeek(valueOffset + (sectionanimheader.animscale.axisIdx2 * sizeof(mstudioanimvalue_t)));

                if(sectionanimheader.animscale.flags & STUDIO_ANIMPTR_Z)
                    mstudioanimvalue_t z <fgcolor=cLtYellow>;

            } scalevalues;
        }

        FSeek(startof(sectionanimheader) + sectionanimheader.size);
    }
}