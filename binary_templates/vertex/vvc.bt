//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: vvc.bt
//   Authors: Rika
//   Version: 1.0
//   Purpose: Respawn Vertex Color File
//  Category: Model
// File Mask: *.vvc
//  ID Bytes: 49 44 43 56
//   History: 
//------------------------------------------------



#include "../source_math.bt"

#define MAX_NUM_BONES_PER_VERT  3
#define MAX_NUM_LODS            8

/* STRUCTS */
struct vertexColorFileHeader_t
{
	int id; // IDCV
	int version; // 1
	int checksum; // same as studiohdr_t, ensures sync

	int numLODs; // num of valid lods
	int numLODVertexes[MAX_NUM_LODS]; // num verts for desired root lod

	int colorDataStart;
	int uv2DataStart;
};


/* PARSE DATA*/
vertexColorFileHeader_t hdr <bgcolor=cYellow>;

/*===========
from r1 vmts:

"$vertexcolor" "1"
"$vertcoloristint" "1"
"$vertexalpha" "1"

"$cockpitlightmap0" "models\titans\stryder\stryder_cockpit\stryder_cockpit_console_pov_lightmap_01"
"$cockpitlightmap1" "models\weapons\arms\titan_atlas_screen_lightmap_02"
"$cockpitscreenlight" "_rt_TinyFB0"
"$seconduvset" "1"
===========*/

FSeek(startof(hdr) + hdr.colorDataStart);
VertexColor_t m_color[hdr.numLODVertexes[0]] <bgcolor=cLtYellow>;


FSeek(startof(hdr) + hdr.uv2DataStart);
Vector2D m_vecTexCoord2[hdr.numLODVertexes[0]] <bgcolor=cDkYellow>;
